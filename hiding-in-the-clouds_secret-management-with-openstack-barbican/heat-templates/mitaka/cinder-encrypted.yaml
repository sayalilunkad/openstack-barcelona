# Example invocation: heat stack-create --poll -f cinder-encrypted.yaml cinder-encrypted
heat_template_version: 2015-10-15


parameters:
  floating_network:
    type: string
    default: floating
  image:
    type: string
    default: cirros-0.3.4
  flavor:
    type: string
    default: m1.tiny
  key_name:
    type: string
    default: mykey
    description: |
      This keypair needs to exist in Nova. Create as follows (assuming your SSH
      public key is in ~/.ssh/id_rsa.pub):

      nova keypair-add --pub-key ~/.ssh/id_rsa.pub mykey


resources:

  mynetwork:
    type: OS::Neutron::Net
    properties:
      name: mynet


  mysubnet:
    type: OS::Neutron::Subnet
    properties:
      cidr: 10.0.0.1/24
      name: mysubnet
      network:
        get_resource: mynetwork

  # Note: this can only created if heat-engine uses an adminURL for its Cinder client
  # cinder type-create encrypted
  myvolumetype:
    type: OS::Cinder::VolumeType
    properties:
      name: encrypted
      is_public: true

  # Note: this can only created if heat-engine uses an adminURL for its Cinder client
  # cinder encryption-type-create encrypted nova.volume.encryptors.luks.LuksEncryptor
  encryption_type:
    type: OS::Cinder::EncryptedVolumeType
    properties:
      volume_type: { get_resource: myvolumetype }
      provider: nova.volume.encryptors.luks.LuksEncryptor


  # This resource may trigger a 403 from two sources (both will be visible in
  # cinder-api.log):
  #   * Keystone, if the fix for https://bugs.launchpad.net/cinder/+bug/1631078
  #     is not applied to your cloud
  #
  #   * Barbican, if the setting trusts_delegated_roles in heat.conf is not either
  #       1) Empty (the default setting)
  #       2) A list of roles that includes either the `creator` role used by
  #          Barbican to determine whether a user is allowed to create an Order
  #          resource or the `admin` role.
  #     In the second case, the user instantiating this Heat template must have
  #     all roles mentioned in trusts_delegated_roles. In short: use Heat's
  #     default setting to test this template and only start tightening the
  #     trusts_delegated_roles later.

  myvolume:
    type: OS::Cinder::Volume
    depends_on: encryption_type
    properties:
      name: myencryptedvolume
      size: 1
      volume_type: { get_resource: myvolumetype }

  myserver:
    type: OS::Nova::Server
    properties:
      name: myserver
      config_drive: true
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: myport }
      user_data_format: RAW
      user_data: |
        #!/bin/sh
        echo 'Hello, World' >> /etc/motd

  myvolumeattachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: myserver }
      volume_id: { get_resource: myvolume }


  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network:
          get_param: floating_network


  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router: { get_resource: router }
      subnet: { get_resource: mysubnet }


  myfloatingip:
    type: OS::Neutron::FloatingIP
    depends_on: router_interface
    properties:
      port_id: { get_resource: myport }
      floating_network:
        get_param: floating_network


  allow_inbound:
    type: OS::Neutron::SecurityGroup
    properties:
      description: "Allow inbound SSH and ICMP traffic"
      name: allow SSH and ICMP from anywhere
      rules:
        - direction: ingress
          remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp


  myport:
    type: OS::Neutron::Port
    properties:
      network:
        get_resource: mynetwork
      security_groups:                # NEW
        - get_resource: allow_inbound # NEW


outputs:
  floating_ip:
    value:
      get_attr:
        - myfloatingip
        - floating_ip_address

